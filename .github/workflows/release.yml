# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    tags:
      - v*.*.*-*.*
jobs:
  build:
    name: Build release package
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      dist-tag: ${{ steps.publish-target.outputs.dist-tag }}
      registry: ${{ steps.publish-target.outputs.registry }}
      prerelease: ${{ steps.publish-target.outputs.prerelease }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 14.18.0
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Prepare Release
        run: yarn release ${{ github.ref_name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-package
          path: dist
      - name: Determine Target
        id: publish-target
        run: yarn ts-node projen/publish-target.ts ${{ github.ref_name }}
  release-to-github:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    env:
      CI: "true"
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 14.18.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-package
      - name: Verify if release exists
        id: release-exists
        run: |-
          if gh release view ${{ github.ref_name }} --repo=${{ github.repository }} &>/dev/null
          then
          echo "result=true" >> $GITHUB_OUTPUT
          else
          echo "result=false" >> $GITHUB_OUTPUT
          fi
      - name: Create Release
        if: steps.release-exists.outputs.result == 'false'
        run: gh release create ${{ github.ref_name }} --repo=${{ github.repository }} --generate-notes --title=${{ github.ref_name }} --verify-tag
      - name: Attach assets
        run: gh release upload ${{ github.ref_name }} --repo=${{ github.repository }} --clobber dist/js/jsii-*.tgz
  release-to-npmjs:
    name: Release to npmjs.com
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      CI: "true"
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 14.18.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-package
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Release
        env:
          NPM_DIST_TAG: ${{ needs.build.outputs.dist-tag }}
          NPM_REGISTRY: ${{ needs.build.outputs.registry }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx -p publib@latest publib-npm
      - name: Tag "latest"
        if: needs.build.outputs.latest == 'true'
        run: npm dist-tag add jsii@${{ github.ref_name }} latest
